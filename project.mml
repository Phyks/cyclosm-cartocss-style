name: CyclOSM
description: 'Cycle oriented CartoCSS style.'
attribution: Data Â© OpenStreetMap (and) contributors, ODbL
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
center:
  - 0
  - 0
  - 4
format: png
interactivity: false
minzoom: 0
maxzoom: 20
srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"

# Various parts to be included later on
_parts:
  # Extents are used for tilemill, and don't actually make it to the generated XML
  extents: &extents
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  extents84: &extents84
    extent: *world
    srs-name: "WGS84"
    srs: "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  osm2pgsql: &osm2pgsql
    type: "postgis"
    dbname: "osm"
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
- palette.mss
- road-colors-generated.mss
- fonts.mss
- base.mss
- roads.mss
- amenities.mss
- labels.mss
- placenames.mss

Layer:
- id: land-low
  <<: *extents
  Datasource:
    file: http://data.openstreetmapdata.com/simplified-land-polygons-complete-3857.zip
    type: shape
  class: shp
  geometry: polygon
  properties:
    maxzoom: 9
- id: land-high
  <<: *extents
  Datasource:
    file: http://data.openstreetmapdata.com/land-polygons-split-3857.zip
    type: shape
  class: shp
  geometry: polygon
  properties:
    minzoom: 10
- id: landuse_gen0
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area, COALESCE(landuse, leisure, "natural", highway, amenity) AS type
        FROM planet_osm_polygon
        WHERE way_area > 100000
        ORDER BY way_area DESC
      ) AS data
  geometry: multipolygon
  properties:
    minzoom: 4
    maxzoom: 9
- id: landuse_gen1
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area, COALESCE(landuse, leisure, "natural", highway, amenity) AS type
        FROM planet_osm_polygon
        WHERE way_area > 10000
        ORDER BY way_area DESC
      ) AS data
  geometry: multipolygon
  properties:
    minzoom: 10
    maxzoom: 12
- id: landuse
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area, COALESCE(landuse, leisure, "natural", highway, amenity) AS type
        FROM planet_osm_polygon
        WHERE landuse IN ('cemetery', 'commercial', 'farmland', 'forest', 'grass', 'industrial', 'meadow', 'residential')
          OR leisure IN ('common', 'golf_course', 'park', 'pitch', 'sports_centre', 'stadium', 'track')
          OR "natural" IN ('grassland', 'heath', 'wood')
          OR highway IN ('pedestrian')
          OR amenity IN ('college', 'hospital', 'parking', 'school', 'university')
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: hillshade5000
  <<: *extents
  Datasource:
    type: gdal
    file: dem/hillshade-5000.tif
    format: tiff
  properties:
    maxzoom: 4
- id: hillshade1000
  <<: *extents
  Datasource:
    type: gdal
    file: dem/hillshade-1000.tif
    format: tiff
  properties:
    minzoom: 5
    maxzoom: 7
- id: hillshade500
  <<: *extents
  Datasource:
    type: gdal
    file: dem/hillshade-500.tif
    format: tiff
  properties:
    minzoom: 8
    maxzoom: 8
- id: hillshade90
  <<: *extents
  Datasource:
    type: gdal
    file: dem/hillshade-90.tif
    format: tiff
  properties:
    minzoom: 9
- id: landuse_over_hillshade
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area, COALESCE(landuse, leisure, "natural", highway, amenity) AS type
        FROM planet_osm_polygon
        WHERE landuse IN ('cemetery', 'commercial', 'farmland', 'forest', 'grass', 'industrial', 'meadow', 'residential')
          OR leisure IN ('common', 'golf_course', 'park', 'pitch', 'sports_centre', 'stadium', 'track')
          OR "natural" IN ('grassland', 'heath', 'wood')
          OR highway IN ('pedestrian')
          OR amenity IN ('college', 'hospital', 'parking', 'school', 'university')
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: waterway_low
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type
        FROM planet_osm_line
        WHERE waterway IN ('river', 'canal')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 8
    maxzoom: 12
- id: waterway_med
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type
        FROM planet_osm_line
        WHERE waterway IN ('river', 'canal', 'stream')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 13
    maxzoom: 14
- id: waterway_high
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type
        FROM planet_osm_line
        WHERE waterway IN ('river', 'canal', 'stream', 'ditch', 'drain')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 15
- id: water_gen0
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, "natural" AS type, way_area AS area
        FROM planet_osm_polygon
        WHERE ("natural" IN ('water', 'pond')
          OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream'))
          AND way_area > 10000
      ) AS data
  geometry: polygon
  properties:
    minzoom: 4
    maxzoom: 9
- id: water_gen1
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, "natural" AS type, way_area AS area
        FROM planet_osm_polygon
        WHERE ("natural" IN ('water', 'pond')
          OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream'))
          AND way_area > 1000
      ) AS data
  geometry: polygon
  properties:
    minzoom: 10
    maxzoom: 12
- id: water
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area
        FROM planet_osm_polygon
        WHERE "natural" IN ('water', 'pond')
          OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream')
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: landuse_overlays
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, way_area AS area, COALESCE(leisure) AS type
        FROM planet_osm_polygon
        WHERE leisure = 'nature_reserve'
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
- id: buildings
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, "building" AS type
        FROM planet_osm_polygon
        WHERE building NOT IN ('', '0','false', 'no')
        ORDER BY ST_YMin(ST_Envelope(way)) DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 12
- id: aeroway
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, aeroway AS type
        FROM planet_osm_line
        WHERE aeroway IN ('apron', 'runway', 'taxiway')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 10
- id: tunnel
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, COALESCE(highway, CASE WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway' ELSE 'other' END) AS type, 0 AS bridge, access, layer, 1 as tunnel,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          bicycle,
          tags->'cycleway' AS cycleway, tags->'cycleway:left' AS cycleway_left, tags->'cycleway:right' AS cycleway_right,
          CASE
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_left_cycleway,
          CASE
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_right_cycleway,
          tags->'ramp:stroller' AS ramp_stroller,
          tags->'ramp:bicycle' AS ramp_cycle,
          tags->'ramp:wheelchair' AS ramp_wheelchair,
          surface, tracktype, tags->'smoothness' AS smoothness,
          CASE
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'paving_stones', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              OR tracktype IN ('grade2', 'grade3')
              OR tags->'smoothness' IN ('intermediate') THEN 'cyclocross'
            WHEN surface IN ('bad', 'gravel', 'pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              OR tracktype IN ('grade4', 'grade5')
              OR tags->'smoothness' IN ('very_bad', 'horrible', 'very_horrible', 'impassable') THEN 'mtb'
            ELSE NULL
          END AS surface_type
        FROM planet_osm_line
        WHERE tunnel NOT IN ('', '0', 'no')
        ORDER BY layer ASC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: contours100
  class: contours
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    dbname: "contours"
    table: |-
      (
        SELECT
          way, ele
        FROM planet_osm_line
        WHERE ele IS NOT NULL AND ele % 100 = 0
      ) AS data
  geometry: line
  properties:
    minzoom: 11
- id: contours50
  class: contours
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    dbname: "contours"
    table: |-
      (
        SELECT
          way, ele
        FROM planet_osm_line
        WHERE ele IS NOT NULL AND ele % 100 != 0 AND ele % 50 = 0
      ) AS data
  geometry: line
  properties:
    minzoom: 11
- id: contours20
  class: contours
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    dbname: "contours"
    table: |-
      (
        SELECT
          way, ele
        FROM planet_osm_line
        WHERE ele IS NOT NULL AND ele % 100 != 0 AND ele % 20 = 0
      ) AS data
  geometry: line
  properties:
    minzoom: 12
- id: contours10
  class: contours
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    dbname: "contours"
    table: |-
      (
        SELECT
          way, ele
        FROM planet_osm_line
        WHERE ele IS NOT NULL AND ele % 50 != 0 AND ele % 10 = 0
      ) AS data
  geometry: line
  properties:
    minzoom: 13
- id: turning_circle_case
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way
        FROM planet_osm_point
        WHERE highway = 'turning_circle'
      ) AS data
  geometry: point
  properties:
    minzoom: 14
- id: roads_high
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, COALESCE(highway, CASE WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway' ELSE 'other' END) AS type, 0 AS tunnel, 0 AS bridge, access,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          bicycle,
          tags->'cycleway' AS cycleway,
          tags->'cycleway:left' AS cycleway_left,
          CASE
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_left_cycleway,
          CASE
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_right_cycleway,
          tags->'cycleway:right' AS cycleway_right,
          tags->'ramp:stroller' AS ramp_stroller,
          tags->'ramp:bicycle' AS ramp_cycle,
          tags->'ramp:wheelchair' AS ramp_wheelchair,
          surface, tracktype, tags->'smoothness' AS smoothness,
          CASE
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'paving_stones', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              OR tracktype IN ('grade2', 'grade3')
              OR tags->'smoothness' IN ('intermediate') THEN 'cyclocross'
            WHEN surface IN ('bad', 'gravel', 'pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              OR tracktype IN ('grade4', 'grade5')
              OR tags->'smoothness' IN ('very_bad', 'horrible', 'very_horrible', 'impassable') THEN 'mtb'
            ELSE NULL
          END AS surface_type,
          CASE
            WHEN highway='cycleway' OR (highway IN ('path', 'footway', 'pedestrian', 'bridleway') AND bicycle IN ('yes', 'designated')) THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer+39 ELSE 39 END
            ELSE z_order
          END AS z_order
        FROM planet_osm_line
        WHERE (highway IS NOT NULL OR railway IS NOT NULL)
          AND (tunnel IS NULL OR tunnel = 'no')
          AND (bridge IS NULL OR bridge = 'no')
        ORDER BY z_order
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: roads_med
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, highway AS type
        FROM planet_osm_roads
        WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary', 'motorway_link', 'trunk_link')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 9
    maxzoom: 10
- id: roads_low
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
          SELECT way, highway AS type, bridge, tunnel
          FROM planet_osm_roads
          WHERE highway IN ('motorway', 'trunk')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 5
    maxzoom: 8
- id: turning_circle_fill
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way
        FROM planet_osm_point
        WHERE highway = 'turning_circle'
      ) AS data
  geometry: point
  properties:
    minzoom: 14
- id: bridge
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, COALESCE(highway, CASE WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway' ELSE 'other' END) AS type, 1 AS bridge, access, layer, 0 as tunnel,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          bicycle,
          tags->'cycleway' AS cycleway,
          tags->'cycleway:left' AS cycleway_left,
          CASE
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_left_cycleway,
          tags->'cycleway:right' AS cycleway_right,
          CASE
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane', 'track', 'opposite_track', 'share_busway', 'opposite_share_busway') THEN 1
            ELSE 0
          END AS has_right_cycleway,
          tags->'ramp:stroller' AS ramp_stroller,
          tags->'ramp:bicycle' AS ramp_cycle,
          tags->'ramp:wheelchair' AS ramp_wheelchair,
          surface, tracktype, tags->'smoothness' AS smoothness,
          CASE
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'paving_stones', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              OR tracktype IN ('grade2', 'grade3')
              OR tags->'smoothness' IN ('intermediate') THEN 'cyclocross'
            WHEN surface IN ('bad', 'gravel', 'pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              OR tracktype IN ('grade4', 'grade5')
              OR tags->'smoothness' IN ('very_bad', 'horrible', 'very_horrible', 'impassable') THEN 'mtb'
            ELSE NULL
          END AS surface_type
        FROM planet_osm_line
        WHERE bridge NOT IN ('', '0', 'no')
        ORDER BY layer ASC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: bicycle_routes
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, route, tags->'network' AS type, tags->'state' AS state,
        CASE
          WHEN tags->'network'='lcn' THEN z_order+1
          WHEN tags->'network'='rcn' THEN z_order+2
          WHEN tags->'network'='ncn' THEN z_order+3
          WHEN tags->'network'='icn' THEN z_order+4
        ELSE z_order END AS z_order
        FROM planet_osm_line
        WHERE (route='bicycle' OR route='mtb')
          AND tags->'network' IN ('lcn', 'rcn', 'ncn', 'icn')
        ORDER BY z_order
      ) AS data
  geometry: linestring
- id: bicycle_routes_labels
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, route, tags->'network'AS type, ref, 1 as height, char_length(ref) AS width
        FROM planet_osm_line
        WHERE (route='bicycle' OR route='mtb') AND ref IS NOT NULL
      ) AS data
  geometry: linestring
  properties:
    minzoom: 8
- id: country-names
  class: country
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels,
          name
        FROM planet_osm_polygon
        WHERE boundary = 'administrative'
          AND admin_level = '2'
          AND name IS NOT NULL
          AND way_area > 100*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  properties:
    minzoom: 2
- id: capital-names
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          CASE
            WHEN (population ~ '^[0-9]{1,8}$') THEN population::INTEGER ELSE 0
          END as population,
          round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles
        FROM planet_osm_point
        WHERE place IN ('city', 'town', 'village', 'hamlet')
          AND name IS NOT NULL
          AND capital='yes'
        ORDER BY population DESC
      ) AS data
  properties:
    minzoom: 3
    maxzoom: 15
- id: state-names
  class: state
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels,
          name,
          ref
        FROM planet_osm_polygon
        WHERE boundary = 'administrative'
          AND admin_level = '4'
          AND name IS NOT NULL
          AND way_area > 100*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  properties:
    minzoom: 4
- id: placenames-medium
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          score,
          CASE
            WHEN (place = 'city') THEN 1
            ELSE 2
          END as category,
          round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles
        FROM
          (SELECT
              osm_id,
              way,
              place,
              name,
              (
                (CASE
                  WHEN (population ~ '^[0-9]{1,8}$') THEN population::INTEGER
                  WHEN (place = 'city') THEN 100000
                  WHEN (place = 'town') THEN 1000
                  ELSE 1
                END)
                *
                (CASE
                  WHEN (capital='4') THEN 2
                  ELSE 1
                END)
              ) AS score
            FROM planet_osm_point
            WHERE place IN ('city', 'town')
              AND name IS NOT NULL
              AND NOT (capital IS NOT NULL AND capital='yes')
          ) as p
        ORDER BY score DESC, length(name) DESC, name
      ) AS data
  properties:
    minzoom: 4
    maxzoom: 15
- id: placenames-small
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          place,
          leisure,
          name
        FROM planet_osm_point
        WHERE place IN ('village', 'hamlet')
           AND name IS NOT NULL
           AND NOT (capital IS NOT NULL AND capital='yes')
           OR (place IN ('suburb', 'quarter', 'neighbourhood', 'locality', 'isolated_dwelling', 'farm')
               OR (place IN ('square')
                   AND (leisure is NULL OR NOT leisure IN ('park', 'common', 'recreation_ground', 'garden')))
           ) AND name IS NOT NULL
        ORDER BY CASE
            WHEN place = 'suburb' THEN 3
            WHEN place = 'village' THEN 4
            WHEN place = 'hamlet' THEN 5
            WHEN place = 'quarter' THEN 6
            WHEN place = 'neighbourhood' THEN 7
            WHEN place = 'locality' THEN 8
            WHEN place = 'isolated_dwelling' THEN 9
            WHEN place = 'farm' THEN 10
            WHEN place = 'square' THEN 11
          END ASC, length(name) DESC, name
      ) AS data
  properties:
    minzoom: 12
- id: area_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT COALESCE(landuse, leisure, "natural", amenity) AS type, name, way_area AS area, ST_PointOnSurface(way) AS way
        FROM planet_osm_polygon
        WHERE name IS NOT NULL AND
          (landuse IN ('basin', 'cemetery', 'commercial', 'forest', 'grass', 'industrial')
            OR COALESCE(leisure, "natural") IS NOT NULL
            OR amenity IN ('embassy', 'library', 'townhall', 'university'))
          AND way && !bbox! AND ST_IsValid(way)
      ) AS data
  geometry: point
  properties:
    minzoom: 10
- id: waterway_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type, name
        FROM planet_osm_line
        WHERE waterway IN ('canal', 'river', 'stream') AND name IS NOT NULL
      ) AS data
  geometry: linestring
  properties:
    minzoom: 13
- id: train_stations
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, railway AS type, name, z_order
        FROM planet_osm_point
        WHERE railway = 'station'
        ORDER BY z_order NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 16
- id: amenities-poly
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    # Update the layer with the text below as well when editing this query.
    table: |-
      (
        SELECT
          access,
          bicycle,
          covered,
          tags->'shelter' AS shelter,
          way,
          name,
          COALESCE( -- order is important here
            'aeroway_' || aeroway,
            'tourism_' || tourism,
            'amenity_' || CASE WHEN amenity != 'fuel' THEN amenity ELSE NULL END,
            'shop_' || shop,
            'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
            'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
            'leisure_' || leisure,
            'man_made_' || man_made,
            'natural_' || "natural",
            'waterway_' || waterway,
            'historic_' || historic,
            'military_'|| military,
            'highway_'|| highway,
            'power_' || power,
            'tourism_' || tourism
          ) AS feature,
          CASE
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS capacity,
          tags->'compressed_air' AS compressed_air,
          tags->'drinking_water' AS drinking_water,
          tags->'location' AS location,
          tags->'memorial' AS memorial,
          tags->'castle_type' AS castle_type,
          tags->'information' AS information,
          tags->'artwork_type' as artwork_type,
          tags->'icao' as icao,
          tags->'iata' as iata,
          tags->'generator:source' as "generator:source",
          tags->'supervised' as supervised,
          tags->'bicycle_parking' as bicycle_parking,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN NULL
            WHEN "waterway" IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
              END
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS score,
          NULL AS elevation,
          CASE
            WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
            END
            ELSE NULL
          END AS height,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
        FROM planet_osm_polygon
        WHERE aeroway IN ('helipad', 'aerodrome')
          OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
              'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
          OR amenity IN ('bar', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'compressed_air', 'drinking_water', 'fast_food', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point')
          OR tags->'compressed_air'='yes'
          OR (amenity='motorcycle_parking' AND (bicycle IS NULL OR bicycle='yes' OR bicycle='designated'))
          OR tags->'healthcare' IN ('clinic', 'hospital')
          OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry')
          OR (shop='sports' AND (tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes'))
          OR leisure='picnic_table'
          OR (
            man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
            AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
          )
          OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
          OR waterway IN ('waterfall')
          OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
          OR military IN ('bunker')
          OR tags->'emergency'='phone'
          OR highway IN ('elevator', 'traffic_signals')
          OR (highway='bus_stop' AND (tags->'shelter'='yes' OR covered='yes'))
          OR (power = 'generator' AND tags->'generator:source'='wind')
        ORDER BY
            CASE
                -- Emergency first
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 0
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets', 'water_point') THEN 10
                WHEN tags->'compressed_air'='yes' THEN 11
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') OR amenity IN ('bicycle_rental') THEN 30
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
      ) AS data
  geometry: polygon
  properties:
    minzoom: 10
- id: amenities-points
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    # Update the layer with the text below as well when editing this query.
    table: |-
      (
        SELECT
          access,
          bicycle,
          covered,
          tags->'shelter' AS shelter,
          way,
          name,
          COALESCE( -- order is important here
            'aeroway_' || aeroway,
            'tourism_' || tourism,
            'amenity_' || CASE WHEN amenity != 'fuel' THEN amenity ELSE NULL END,
            'shop_' || shop,
            'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
            'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
            'leisure_' || leisure,
            'man_made_' || man_made,
            'natural_' || "natural",
            'waterway_' || waterway,
            'historic_' || historic,
            'military_'|| military,
            'highway_'|| highway,
            'power_' || power,
            'tourism_' || tourism,
            'traffic_calming_' || CASE WHEN tags->'traffic_calming' IS NOT NULL THEN tags->'traffic_calming' ELSE NULL END,
            'cycleway_' || CASE WHEN tags->'cycleway' IS NOT NULL then tags->'cycleway' ELSE NULL END
          ) AS feature,
          CASE
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS capacity,
          tags->'compressed_air' AS compressed_air,
          tags->'drinking_water' AS drinking_water,
          tags->'location' AS location,
          tags->'memorial' AS memorial,
          tags->'castle_type' AS castle_type,
          tags->'information' AS information,
          tags->'artwork_type' as artwork_type,
          tags->'icao' as icao,
          tags->'iata' as iata,
          tags->'generator:source' as "generator:source",
          tags->'supervised' as supervised,
          tags->'bicycle_parking' as bicycle_parking,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN
              CASE
                WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                ELSE NULL
              END
            WHEN "waterway" IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
              END
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS score,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle')
              OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')
              OR amenity = 'shelter'
              THEN
              CASE
                WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                ELSE NULL
              END
            ELSE NULL
          END AS elevation,
          CASE
            WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
            END
            ELSE NULL
          END AS height,
          NULL AS way_pixels
        FROM planet_osm_point
        WHERE aeroway IN ('helipad', 'aerodrome')
          OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
              'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
          OR amenity IN ('bar', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'compressed_air', 'drinking_water', 'fast_food', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point')
          OR tags->'compressed_air'='yes'
          OR (amenity='motorcycle_parking' AND (bicycle IS NULL OR bicycle='yes' OR bicycle='designated'))
          OR tags->'healthcare' IN ('clinic', 'hospital')
          OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry')
          OR (shop='sports' AND (tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes'))
          OR leisure='picnic_table'
          OR (
            man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
            AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
          )
          OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
          OR waterway IN ('waterfall')
          OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
          OR military IN ('bunker')
          OR tags->'emergency'='phone'
          OR highway IN ('elevator', 'traffic_signals')
          OR (highway='bus_stop' AND (tags->'shelter'='yes' OR covered='yes'))
          OR (power = 'generator' AND tags->'generator:source'='wind')
          OR tags->'traffic_calming' IN ('yes', 'bump', 'dip', 'choker', 'cushion', 'hump', 'rumble_strip', 'table')
          OR tags->'cycleway'='asl'
        ORDER BY
            CASE
                -- Emergency first
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 0
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets', 'water_point') THEN 10
                WHEN tags->'compressed_air'='yes' THEN 11
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') OR amenity IN ('bicycle_rental') THEN 30
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 10
- id: barriers
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT barrier, way, z_order
        FROM planet_osm_point
        WHERE barrier IN ('block', 'bollard', 'cattle_grid', 'chain', 'cycle_barrier', 'gate', 'kissing_gate', 'lift_gate', 'stile', 'swing_gate', 'turnstile')
        ORDER BY z_order NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 17
- id: amenities-poly-text
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          feature,
          access,
          capacity,
          CONCAT(
              name,
              CASE WHEN name IS NOT NULL AND (elevation IS NOT NULL OR height IS NOT NULL) THEN E'\n' ELSE NULL END,
              CASE WHEN height IS NOT NULL THEN CONCAT(ROUND(height)::TEXT, U&'\00A0', 'm') ELSE NULL END
          ) AS name,
          score,
          height,
          information,
          way_pixels
        FROM
        (
          SELECT
            access,
            bicycle,
            covered,
            tags->'shelter' AS shelter,
            way,
            name,
            COALESCE( -- order is important here
              'aeroway_' || aeroway,
              'tourism_' || tourism,
              'amenity_' || CASE WHEN amenity != 'fuel' THEN amenity ELSE NULL END,
              'shop_' || shop,
              'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
              'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
              'leisure_' || leisure,
              'man_made_' || man_made,
              'natural_' || "natural",
              'waterway_' || waterway,
              'historic_' || historic,
              'military_'|| military,
              'highway_'|| highway,
              'power_' || power,
              'tourism_' || tourism
            ) AS feature,
            CASE
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS capacity,
            tags->'compressed_air' AS compressed_air,
            tags->'drinking_water' AS drinking_water,
            tags->'location' AS location,
            tags->'memorial' AS memorial,
            tags->'castle_type' AS castle_type,
            tags->'information' AS information,
            tags->'artwork_type' as artwork_type,
            tags->'icao' as icao,
            tags->'iata' as iata,
            tags->'generator:source' as "generator:source",
            tags->'supervised' as supervised,
            tags->'bicycle_parking' as bicycle_parking,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN NULL
              WHEN "waterway" IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
                END
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS score,
            NULL AS elevation,
            CASE
              WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
              END
              ELSE NULL
            END AS height,
            way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
          FROM planet_osm_polygon
          WHERE aeroway IN ('helipad', 'aerodrome')
            OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
                'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
            OR amenity IN ('bar', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'compressed_air', 'drinking_water', 'fast_food', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point')
            OR tags->'compressed_air'='yes'
            OR (amenity='motorcycle_parking' AND (bicycle IS NULL OR bicycle='yes' OR bicycle='designated'))
            OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry')
            OR (shop='sports' AND (tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes'))
            OR tags->'healthcare' IN ('clinic', 'hospital')
            OR leisure='picnic_table'
            OR (
              man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
              AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
            )
            OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
            OR waterway IN ('waterfall')
            OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
            OR military IN ('bunker')
            OR tags->'emergency'='phone'
            OR highway IN ('elevator', 'traffic_signals')
            OR (highway='bus_stop' AND (tags->'shelter'='yes' OR covered='yes'))
            OR (power = 'generator' AND tags->'generator:source'='wind')
          ORDER BY
            CASE
                -- Emergency first
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 0
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets', 'water_point') THEN 10
                WHEN tags->'compressed_air'='yes' THEN 11
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') OR amenity IN ('bicycle_rental') THEN 30
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
        ) AS p
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: amenities-points-text
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          feature,
          access,
          capacity,
          CONCAT(
              name,
              CASE WHEN name IS NOT NULL AND (elevation IS NOT NULL OR height IS NOT NULL) THEN E'\n' ELSE NULL END,
              CASE WHEN elevation IS NOT NULL THEN CONCAT(REPLACE(ROUND(elevation)::TEXT, '-', U&'\2212'), U&'\00A0', 'm') ELSE NULL END,
              CASE WHEN height IS NOT NULL THEN CONCAT(ROUND(height)::TEXT, U&'\00A0', 'm') ELSE NULL END
          ) AS name,
          score,
          height,
          information,
          way_pixels
        FROM
        (
          SELECT
            access,
            bicycle,
            covered,
            tags->'shelter' AS shelter,
            way,
            name,
            COALESCE( -- order is important here
              'aeroway_' || aeroway,
              'tourism_' || tourism,
              'amenity_' || CASE WHEN amenity != 'fuel' THEN amenity ELSE NULL END,
              'shop_' || shop,
              'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
              'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
              'leisure_' || leisure,
              'man_made_' || man_made,
              'natural_' || "natural",
              'waterway_' || waterway,
              'historic_' || historic,
              'military_'|| military,
              'highway_'|| highway,
              'power_' || power,
              'tourism_' || tourism,
              'traffic_calming_' || CASE WHEN tags->'traffic_calming' IS NOT NULL THEN tags->'traffic_calming' ELSE NULL END,
              'cycleway_' || CASE WHEN tags->'cycleway' IS NOT NULL then tags->'cycleway' ELSE NULL END
            ) AS feature,
            CASE
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS capacity,
            tags->'compressed_air' AS compressed_air,
            tags->'drinking_water' AS drinking_water,
            tags->'location' AS location,
            tags->'memorial' AS memorial,
            tags->'castle_type' AS castle_type,
            tags->'information' AS information,
            tags->'artwork_type' as artwork_type,
            tags->'icao' as icao,
            tags->'iata' as iata,
            tags->'generator:source' as "generator:source",
            tags->'supervised' as supervised,
            tags->'bicycle_parking' as bicycle_parking,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN
                CASE
                  WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                  ELSE NULL
                END
              WHEN "waterway" IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
                END
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS score,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle')
                OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')
                OR amenity = 'shelter'
                THEN
                CASE
                  WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                  ELSE NULL
                END
              ELSE NULL
            END AS elevation,
            CASE
              WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
              END
              ELSE NULL
            END AS height,
            NULL AS way_pixels
          FROM planet_osm_point
          WHERE aeroway IN ('helipad', 'aerodrome')
            OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
                'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
            OR amenity IN ('bar', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'compressed_air', 'drinking_water', 'fast_food', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point')
            OR tags->'compressed_air'='yes'
            OR (amenity='motorcycle_parking' AND (bicycle IS NULL OR bicycle='yes' OR bicycle='designated'))
            OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry')
            OR (shop='sports' AND (tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes'))
            OR tags->'healthcare' IN ('clinic', 'hospital')
            OR leisure='picnic_table'
            OR (
              man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
              AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
            )
            OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
            OR waterway IN ('waterfall')
            OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
            OR military IN ('bunker')
            OR tags->'emergency'='phone'
            OR highway IN ('elevator', 'traffic_signals')
            OR (highway='bus_stop' AND (tags->'shelter'='yes' OR covered='yes'))
            OR (power = 'generator' AND tags->'generator:source'='wind')
            OR tags->'traffic_calming' IN ('yes', 'bump', 'dip', 'choker', 'cushion', 'hump', 'rumble_strip', 'table')
            OR tags->'cycleway'='asl'
          ORDER BY
            CASE
                -- Emergency first
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 0
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets', 'water_point') THEN 10
                WHEN tags->'compressed_air'='yes' THEN 11
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') OR amenity IN ('bicycle_rental') THEN 30
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
        ) AS p
      ) AS data
  geometry: point
  properties:
    minzoom: 13
- id: highway_area_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT highway AS type, name, way_area AS area, ST_PointOnSurface(way) AS way
        FROM planet_osm_polygon
        WHERE name IS NOT NULL AND highway IS NOT NULL
          AND way && !bbox! AND ST_IsValid(way)
      ) AS data
  geometry: point
  properties:
    minzoom: 10
- id: roads-text-ref-low-zoom
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          height,
          width,
          refs
        FROM (
          SELECT
            way,
            osm_id,
            highway,
            array_length(refs,1) AS height,
            (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,
            array_to_string(refs, E'\n') AS refs
          FROM (
            SELECT
              way,
              osm_id,
              highway,
              string_to_array(ref, ';') AS refs
            FROM planet_osm_roads
            WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary')
              AND ref IS NOT NULL
          ) AS p
        ) AS q
        WHERE height <= 4 AND width <= 11
        ORDER BY
        CASE
          WHEN highway = 'motorway' THEN 38
          WHEN highway = 'trunk' THEN 37
          WHEN highway = 'primary' THEN 36
          WHEN highway = 'secondary' THEN 35
          WHEN highway = 'tertiary' THEN 34
          WHEN highway = 'unclassified' THEN 33
          WHEN highway = 'residential' THEN 32
          WHEN highway = 'runway' THEN 6
          WHEN highway = 'taxiway' THEN 5
          ELSE NULL
        END DESC NULLS LAST,
        height DESC,
        width DESC,
        refs,
        osm_id
      ) AS data
  properties:
    minzoom: 10
    maxzoom: 12
- id: roads-text-ref
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          height,
          width,
          refs
        FROM (
          SELECT
            osm_id,
            way,
            highway,
            array_length(refs,1) AS height,
            (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,
            array_to_string(refs, E'\n') AS refs
          FROM (
            SELECT
              osm_id,
              way,
              COALESCE(
                CASE WHEN highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') THEN highway ELSE NULL END,
                CASE WHEN aeroway IN ('runway', 'taxiway') THEN aeroway ELSE NULL END
              ) AS highway,
              string_to_array(ref, ';') AS refs
            FROM planet_osm_line
            WHERE (highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') OR aeroway IN ('runway', 'taxiway'))
              AND ref IS NOT NULL
        ) AS p
      ) AS q
      WHERE height <= 4 AND width <= 11
      ORDER BY
        CASE
          WHEN highway = 'motorway' THEN 38
          WHEN highway = 'trunk' THEN 37
          WHEN highway = 'primary' THEN 36
          WHEN highway = 'secondary' THEN 35
          WHEN highway = 'tertiary' THEN 34
          WHEN highway = 'unclassified' THEN 33
          WHEN highway = 'residential' THEN 32
          WHEN highway = 'track' THEN 30
          WHEN highway = 'runway' THEN 6
          WHEN highway = 'taxiway' THEN 5
          ELSE NULL
        END DESC NULLS LAST,
        height DESC,
        width DESC,
        refs,
        osm_id
      ) AS data
  properties:
    minzoom: 13
- id: roads-text-name
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          CASE WHEN substr(highway, length(highway)-4, 5) = '_link' THEN substr(highway, 0, length(highway)-4) ELSE highway END AS highway,
          CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no' END AS tunnel,
          construction,
          name,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            WHEN junction IN ('roundabout') AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'
            ELSE NULL
          END AS oneway,
          CASE
            WHEN tags->'oneway:bicycle'='no' THEN 'no'
            WHEN tags->'cycleway' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
              OR tags->'cycleway:left' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
              OR tags->'cycleway:right' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
            THEN 'no'
            ELSE 'yes'
          END AS oneway_bicycle,
          horse, bicycle
        FROM planet_osm_line l
        JOIN (VALUES -- this join is also putting a condition on what is selected. features not matching it do not make it into the results.
          ('motorway', 380),
          ('trunk', 370),
          ('primary', 360),
          ('secondary', 350),
          ('tertiary', 340),
          ('residential', 330),
          ('unclassified', 330),
          ('road', 330),
          ('living_street', 320),
          ('pedestrian', 310),
          ('raceway', 300),
          ('motorway_link', 240),
          ('trunk_link', 230),
          ('primary_link', 220),
          ('secondary_link', 210),
          ('tertiary_link', 200),
          ('service', 150),
          ('construction', 10)
        ) AS ordertable (highway, prio)
        USING (highway)
        WHERE highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary',
          'tertiary_link', 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'raceway', 'living_street', 'construction')
          AND (name IS NOT NULL
          OR oneway IN ('yes', '-1')
          OR junction IN ('roundabout'))
        ORDER BY
          z_order DESC, -- put important roads first
          CASE WHEN layer~E'^\\d+$' THEN layer::integer ELSE 0 END, -- put top layered roads first
          length(name) DESC, -- Try to fit big labels in first
          name DESC, -- Force a consistent ordering between differently named streets
          l.osm_id DESC -- Force an ordering for streets of the same name, e.g. dualized roads
      ) AS data
  properties:
    minzoom: 13
- id: paths-text-name
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          construction,
          name
        FROM planet_osm_line
        WHERE highway IN ('bridleway', 'footway', 'cycleway', 'path', 'track', 'steps', 'construction')
          AND name IS NOT NULL
      ) AS data
  properties:
    minzoom: 15
